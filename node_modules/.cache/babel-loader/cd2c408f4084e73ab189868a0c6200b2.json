{"ast":null,"code":"import _classCallCheck from \"/home/harishnigam/Documents/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/harishnigam/Documents/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/harishnigam/Documents/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/harishnigam/Documents/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/harishnigam/Documents/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/harishnigam/Documents/react-reduction/src/components/MapWithBubbles.js\";\nimport world50m from 'assets/geo-data/world-50m.json';\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\nimport { scaleLinear } from 'd3-scale';\nimport React, { Component } from 'react';\nimport { ComposableMap, Geographies, Geography, Marker, Markers, ZoomableGroup } from 'react-simple-maps';\nimport { getColor } from 'utils/colors';\nvar cityScale = scaleLinear().domain([0, 37843000]).range([1, 25]);\nvar BubbleMap = /*#__PURE__*/function (_Component) {\n  _inherits(BubbleMap, _Component);\n  function BubbleMap() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, BubbleMap);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BubbleMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cities: cities\n    };\n    return _this;\n  }\n  _createClass(BubbleMap, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      // const primaryColor = getColor('primary');\n      var secondaryColor = getColor('secondary');\n      var lightColor = getColor('light');\n      return /*#__PURE__*/React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 205\n        },\n        width: 980,\n        height: 551,\n        style: {\n          width: '100%',\n          height: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n        center: [0, 20],\n        disablePanning: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Geographies, {\n        geography: world50m,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return geography.id !== 'ATA' && /*#__PURE__*/React.createElement(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            style: {\n              default: {\n                fill: lightColor,\n                stroke: lightColor,\n                strokeWidth: 0.75,\n                outline: 'none'\n              },\n              hover: {\n                fill: secondaryColor,\n                stroke: secondaryColor,\n                strokeWidth: 0.75,\n                outline: 'none'\n              },\n              pressed: {\n                fill: secondaryColor,\n                stroke: secondaryColor,\n                strokeWidth: 0.75,\n                outline: 'none'\n              }\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }\n          });\n        });\n      }), /*#__PURE__*/React.createElement(Markers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, this.state.cities.map(function (city, i) {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: i,\n          marker: city,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"circle\", {\n          cx: 0,\n          cy: 0,\n          r: cityScale(city.population),\n          fill: secondaryColor,\n          stroke: secondaryColor,\n          strokeWidth: \"2\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }\n        }));\n      }))));\n    }\n  }]);\n  return BubbleMap;\n}(Component);\nexport default BubbleMap;","map":{"version":3,"names":["world50m","cities","scaleLinear","React","Component","ComposableMap","Geographies","Geography","Marker","Markers","ZoomableGroup","getColor","cityScale","domain","range","BubbleMap","_Component","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","_createClass","key","value","render","_this2","secondaryColor","lightColor","createElement","projectionConfig","scale","width","height","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","center","disablePanning","geography","geographies","projection","map","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed","city","marker","cx","cy","r","population"],"sources":["/home/harishnigam/Documents/react-reduction/src/components/MapWithBubbles.js"],"sourcesContent":["import world50m from 'assets/geo-data/world-50m.json';\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\nimport { scaleLinear } from 'd3-scale';\nimport React, { Component } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Markers,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { getColor } from 'utils/colors';\n\nconst cityScale = scaleLinear()\n  .domain([0, 37843000])\n  .range([1, 25]);\n\nclass BubbleMap extends Component {\n  state = {\n    cities,\n  };\n\n  render() {\n    // const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n    const lightColor = getColor('light');\n\n    return (\n      <ComposableMap\n        projectionConfig={{ scale: 205 }}\n        width={980}\n        height={551}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={world50m}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== 'ATA' && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: lightColor,\n                          stroke: lightColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        hover: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        pressed: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                      }}\n                    />\n                  ),\n              )\n            }\n          </Geographies>\n          <Markers>\n            {this.state.cities.map((city, i) => (\n              <Marker key={i} marker={city}>\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={cityScale(city.population)}\n                  fill={secondaryColor}\n                  stroke={secondaryColor}\n                  strokeWidth=\"2\"\n                />\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    );\n  }\n}\n\nexport default BubbleMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}