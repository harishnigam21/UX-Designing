{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar PropTypes = _interopDefault(require('prop-types'));\nvar invariant = _interopDefault(require('invariant'));\nvar sizeMe = _interopDefault(require('react-sizeme'));\n\n// :: (Object, Object, (any, any) => any) => Object\nvar mergeWith = function mergeWith(x, y, fn) {\n  var result = Object.assign({}, x);\n  Object.keys(y).forEach(function (key) {\n    if (x[key] && y[key]) {\n      result[key] = fn(x[key], y[key], key);\n    } else {\n      result[key] = y[key];\n    }\n  });\n  return result;\n};\n\n// :: Component => String\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\n// Taken from react-redux.  Thanks Dan!\n\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  var hasOwn = Object.prototype.hasOwnProperty;\n  for (var i = 0; i < keysA.length; i += 1) {\n    // eslint-disable-line no-plusplus\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n  return true;\n}\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n};\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\nvar defaultConfig = {\n  monitorHeight: false,\n  monitorWidth: true,\n  refreshRate: 16,\n  pure: true,\n  noPlaceholder: false\n};\nvar defaultConflictResolver = function defaultConflictResolver(x, y) {\n  return y;\n};\nvar defaultSizeMeConfig = function defaultSizeMeConfig() {\n  return {\n    monitorWidth: defaultConfig.monitorWidth,\n    monitorHeight: defaultConfig.monitorHeight,\n    refreshRate: defaultConfig.refreshRate\n  };\n};\n\n/**\n * :: Queries -> Component -> Component\n *\n * This is a HOC that provides you with the mechanism to specify Component\n * queries. A Component query is a similar concept to media queries except it\n * operates on the Component's width/height rather than the entire viewport\n * width/height.\n */\nfunction componentQueries() {\n  var queries = void 0;\n  var sizeMeConfig = void 0;\n  var pure = void 0;\n  var conflictResolver = void 0;\n  for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n  if (params.length === 1 && params[0].queries) {\n    queries = params[0].queries || [];\n    if (params[0].sizeMeConfig) {\n      // Old school config style.\n      sizeMeConfig = params[0].sizeMeConfig || defaultSizeMeConfig();\n      pure = defaultConfig.pure; // this didn't exist before, so we default it.\n    } else if (params[0].config) {\n      // New school config style.\n      pure = params[0].config.pure;\n      var _params$0$config = params[0].config,\n        monitorHeight = _params$0$config.monitorHeight,\n        monitorWidth = _params$0$config.monitorWidth,\n        refreshRate = _params$0$config.refreshRate,\n        refreshMode = _params$0$config.refreshMode,\n        noPlaceholder = _params$0$config.noPlaceholder;\n      sizeMeConfig = {\n        monitorHeight: monitorHeight != null ? monitorHeight : defaultConfig.monitorHeight,\n        monitorWidth: monitorWidth != null ? monitorWidth : defaultConfig.monitorWidth,\n        refreshRate: refreshRate != null ? refreshRate : defaultConfig.refreshRate,\n        refreshMode: refreshMode != null ? refreshMode : defaultConfig.refreshMode,\n        noPlaceholder: noPlaceholder != null ? noPlaceholder : defaultConfig.noPlaceholder\n      };\n    }\n    conflictResolver = conflictResolver || params[0].conflictResolver || defaultConflictResolver;\n    invariant(typeof conflictResolver === 'function', 'The conflict resolver you provide to ComponentQueries should be a function.');\n    invariant(Array.isArray(queries), '\"queries\" must be provided as an array when using the complex configuration.');\n  } else {\n    queries = params;\n  }\n\n  // TODO: Consider removing this check.  Perhaps it's best to just silently\n  // pass through if no queries were provided?  Maybe a development based\n  // warning would be the most useful.\n  invariant(queries.length > 0, 'You must provide at least one query to ComponentQueries.');\n  invariant(queries.filter(function (q) {\n    return typeof q !== 'function';\n  }).length === 0, 'All provided queries for ComponentQueries should be functions.');\n\n  // We will default out any configuration if it wasn't set.\n  sizeMeConfig = sizeMeConfig || defaultSizeMeConfig();\n  conflictResolver = conflictResolver || defaultConflictResolver;\n  pure = pure != null ? pure : defaultConfig.pure;\n  var mergeWithCustomizer = function mergeWithCustomizer(x, y, key) {\n    if (x === undefined) return undefined;\n    return conflictResolver(x, y, key);\n  };\n  return function WrapComponent(WrappedComponent) {\n    var ComponentWithComponentQueries = function (_Component) {\n      inherits(ComponentWithComponentQueries, _Component);\n      function ComponentWithComponentQueries() {\n        var _ref;\n        var _temp, _this, _ret;\n        classCallCheck(this, ComponentWithComponentQueries);\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ComponentWithComponentQueries.__proto__ || Object.getPrototypeOf(ComponentWithComponentQueries)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n          queryResult: {}\n        }, _temp), possibleConstructorReturn(_this, _ret);\n      }\n      createClass(ComponentWithComponentQueries, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n          var _props = this.props,\n            size = _props.size,\n            otherProps = objectWithoutProperties(_props, ['size']);\n          this.runQueries(size, otherProps);\n        }\n      }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n          var size = this.props.size;\n          var nextSize = nextProps.size,\n            nextOtherProps = objectWithoutProperties(nextProps, ['size']);\n          if (!shallowEqual(size, nextSize)) {\n            this.runQueries(nextSize, nextOtherProps);\n          }\n        }\n      }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          var _props2 = this.props,\n            size = _props2.size,\n            otherProps = objectWithoutProperties(_props2, ['size']);\n          var nextSize = nextProps.size,\n            nextOtherProps = objectWithoutProperties(nextProps, ['size']);\n          return !pure || !shallowEqual(otherProps, nextOtherProps) || !shallowEqual(this.state.queryResult, nextState.queryResult);\n        }\n      }, {\n        key: 'runQueries',\n        value: function runQueries(_ref2, otherProps) {\n          var width = _ref2.width,\n            height = _ref2.height;\n          var queryResult = queries.reduce(function (acc, cur) {\n            return mergeWith(acc, cur({\n              width: sizeMeConfig.monitorWidth ? width : null,\n              height: sizeMeConfig.monitorHeight ? height : null\n            }, otherProps), mergeWithCustomizer);\n          }, {});\n          this.setState({\n            queryResult: queryResult\n          });\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _props3 = this.props,\n            size = _props3.size,\n            otherProps = objectWithoutProperties(_props3, ['size']);\n          var allProps = mergeWith(this.state.queryResult, otherProps, mergeWithCustomizer);\n          return React__default.createElement(WrappedComponent, allProps);\n        }\n      }]);\n      return ComponentWithComponentQueries;\n    }(React.Component);\n    ComponentWithComponentQueries.displayName = 'ComponentQueries(' + getDisplayName(WrappedComponent) + ')';\n    ComponentWithComponentQueries.propTypes = {\n      size: PropTypes.shape({\n        width: PropTypes.number,\n        // eslint-disable-line react/no-unused-prop-types\n        height: PropTypes.number // eslint-disable-line react/no-unused-prop-types\n      }).isRequired\n    };\n    ComponentWithComponentQueries.WrappedComponent = WrappedComponent;\n    return sizeMe(sizeMeConfig)(ComponentWithComponentQueries);\n  };\n}\nmodule.exports = componentQueries;","map":{"version":3,"names":["mergeWith","x","y","fn","result","Object","assign","keys","forEach","key","getDisplayName","WrappedComponent","displayName","name","shallowEqual","objA","objB","keysA","keysB","length","hasOwn","prototype","hasOwnProperty","i","call","defaultConfig","defaultConflictResolver","defaultSizeMeConfig","monitorWidth","monitorHeight","refreshRate","componentQueries","queries","sizeMeConfig","pure","conflictResolver","params","Array","_len","_key","arguments","config","_params$0$config","refreshMode","noPlaceholder","isArray","filter","q","mergeWithCustomizer","undefined","WrapComponent","ComponentWithComponentQueries","_Component","state","_temp","possibleConstructorReturn","_this","_ret","props","size","_props","otherProps","objectWithoutProperties","runQueries","nextProps","nextSize","nextOtherProps","nextState","_props2","queryResult","width","_ref2","height","reduce","acc","cur","setState","_props3","allProps","React__default","createElement","React","Component","propTypes","PropTypes","shape","number","isRequired","sizeMe"],"sources":["/home/harishnigam/Documents/react-reduction/node_modules/react-component-queries/src/utils/mergeWith.js","/home/harishnigam/Documents/react-reduction/node_modules/react-component-queries/src/utils/getDisplayName.js","/home/harishnigam/Documents/react-reduction/node_modules/react-component-queries/src/utils/shallowEqual.js","/home/harishnigam/Documents/react-reduction/node_modules/react-component-queries/src/componentQueries.js"],"sourcesContent":["// :: (Object, Object, (any, any) => any) => Object\nconst mergeWith = (x, y, fn) => {\n  const result = Object.assign({}, x)\n\n  Object.keys(y).forEach(key => {\n    if (x[key] && y[key]) {\n      result[key] = fn(x[key], y[key], key)\n    } else {\n      result[key] = y[key]\n    }\n  })\n\n  return result\n}\n\nexport default mergeWith\n","// :: Component => String\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport default getDisplayName\n","// Taken from react-redux.  Thanks Dan!\n\nexport default function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) {\n    return false\n  }\n\n  // Test for A's keys different from B.\n  const hasOwn = Object.prototype.hasOwnProperty\n  for (let i = 0; i < keysA.length; i += 1) {\n    // eslint-disable-line no-plusplus\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false\n    }\n  }\n\n  return true\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport invariant from 'invariant'\nimport sizeMe from 'react-sizeme'\nimport mergeWith from './utils/mergeWith'\nimport getDisplayName from './utils/getDisplayName'\nimport shallowEqual from './utils/shallowEqual'\n\nconst defaultConfig = {\n  monitorHeight: false,\n  monitorWidth: true,\n  refreshRate: 16,\n  pure: true,\n  noPlaceholder: false,\n}\n\nconst defaultConflictResolver = (x, y) => y\n\nconst defaultSizeMeConfig = () => ({\n  monitorWidth: defaultConfig.monitorWidth,\n  monitorHeight: defaultConfig.monitorHeight,\n  refreshRate: defaultConfig.refreshRate,\n})\n\n/**\n * :: Queries -> Component -> Component\n *\n * This is a HOC that provides you with the mechanism to specify Component\n * queries. A Component query is a similar concept to media queries except it\n * operates on the Component's width/height rather than the entire viewport\n * width/height.\n */\nfunction componentQueries(...params) {\n  let queries\n  let sizeMeConfig\n  let pure\n  let conflictResolver\n\n  if (params.length === 1 && params[0].queries) {\n    queries = params[0].queries || []\n    if (params[0].sizeMeConfig) {\n      // Old school config style.\n      sizeMeConfig = params[0].sizeMeConfig || defaultSizeMeConfig()\n      pure = defaultConfig.pure // this didn't exist before, so we default it.\n    } else if (params[0].config) {\n      // New school config style.\n      pure = params[0].config.pure\n      const {\n        monitorHeight,\n        monitorWidth,\n        refreshRate,\n        refreshMode,\n        noPlaceholder,\n      } = params[0].config\n      sizeMeConfig = {\n        monitorHeight:\n          monitorHeight != null ? monitorHeight : defaultConfig.monitorHeight,\n        monitorWidth:\n          monitorWidth != null ? monitorWidth : defaultConfig.monitorWidth,\n        refreshRate:\n          refreshRate != null ? refreshRate : defaultConfig.refreshRate,\n        refreshMode:\n          refreshMode != null ? refreshMode : defaultConfig.refreshMode,\n        noPlaceholder:\n          noPlaceholder != null ? noPlaceholder : defaultConfig.noPlaceholder,\n      }\n    }\n    conflictResolver =\n      conflictResolver || params[0].conflictResolver || defaultConflictResolver\n    invariant(\n      typeof conflictResolver === 'function',\n      'The conflict resolver you provide to ComponentQueries should be a function.',\n    )\n    invariant(\n      Array.isArray(queries),\n      '\"queries\" must be provided as an array when using the complex configuration.',\n    )\n  } else {\n    queries = params\n  }\n\n  // TODO: Consider removing this check.  Perhaps it's best to just silently\n  // pass through if no queries were provided?  Maybe a development based\n  // warning would be the most useful.\n  invariant(\n    queries.length > 0,\n    'You must provide at least one query to ComponentQueries.',\n  )\n  invariant(\n    queries.filter(q => typeof q !== 'function').length === 0,\n    'All provided queries for ComponentQueries should be functions.',\n  )\n\n  // We will default out any configuration if it wasn't set.\n  sizeMeConfig = sizeMeConfig || defaultSizeMeConfig()\n  conflictResolver = conflictResolver || defaultConflictResolver\n  pure = pure != null ? pure : defaultConfig.pure\n\n  const mergeWithCustomizer = (x, y, key) => {\n    if (x === undefined) return undefined\n    return conflictResolver(x, y, key)\n  }\n\n  return function WrapComponent(WrappedComponent) {\n    class ComponentWithComponentQueries extends Component {\n      static displayName = `ComponentQueries(${getDisplayName(\n        WrappedComponent,\n      )})`\n\n      static propTypes = {\n        size: PropTypes.shape({\n          width: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n          height: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\n        }).isRequired,\n      }\n\n      static WrappedComponent = WrappedComponent\n\n      state = {\n        queryResult: {},\n      }\n\n      componentWillMount() {\n        const { size, ...otherProps } = this.props\n        this.runQueries(size, otherProps)\n      }\n\n      componentWillReceiveProps(nextProps) {\n        const { size } = this.props\n        const { size: nextSize, ...nextOtherProps } = nextProps\n\n        if (!shallowEqual(size, nextSize)) {\n          this.runQueries(nextSize, nextOtherProps)\n        }\n      }\n\n      shouldComponentUpdate(nextProps, nextState) {\n        const {\n          size, // eslint-disable-line no-unused-vars\n          ...otherProps\n        } = this.props\n        const {\n          size: nextSize, // eslint-disable-line no-unused-vars\n          ...nextOtherProps\n        } = nextProps\n\n        return (\n          !pure ||\n          !shallowEqual(otherProps, nextOtherProps) ||\n          !shallowEqual(this.state.queryResult, nextState.queryResult)\n        )\n      }\n\n      runQueries({ width, height }, otherProps) {\n        const queryResult = queries.reduce(\n          (acc, cur) =>\n            mergeWith(\n              acc,\n              cur(\n                {\n                  width: sizeMeConfig.monitorWidth ? width : null,\n                  height: sizeMeConfig.monitorHeight ? height : null,\n                },\n                otherProps,\n              ),\n              mergeWithCustomizer,\n            ),\n          {},\n        )\n\n        this.setState({ queryResult })\n      }\n\n      render() {\n        const {\n          size, // eslint-disable-line no-unused-vars\n          ...otherProps\n        } = this.props\n\n        const allProps = mergeWith(\n          this.state.queryResult,\n          otherProps,\n          mergeWithCustomizer,\n        )\n\n        return <WrappedComponent {...allProps} />\n      }\n    }\n\n    return sizeMe(sizeMeConfig)(ComponentWithComponentQueries)\n  }\n}\n\nexport default componentQueries\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}